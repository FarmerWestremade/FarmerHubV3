

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v74=0;while true do if (v74==0) then v19=v0(v3(v20,1,1));return "";end end else local v75=v2(v0(v20,16));if v19 then local v79=0;local v80;while true do if (v79==0) then v80=v5(v75,v19);v19=nil;v79=1;end if (v79==1) then return v80;end end else return v75;end end end);local function v21(v22,v23,v24)if v24 then local v76=(v22/(2^(v23-(557 -(284 + 272)))))%((2 -(0 + 0))^(((v24-(1 -0)) -(v23-1)) + (1 -0)));return v76-(v76%(1 -0));else local v77=718 -(638 + 80);local v78;while true do if ((0 + 0 + 0)==v77) then v78=(9 -7)^(v23-1);return (((v22%(v78 + v78))>=v78) and 1) or (0 + 0);end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39=1151 -(160 + 991);local v40;local v41;while true do if (v39==0) then v40,v41=v1(v16,v18,v18 + (4 -(1866 -(1054 + 810))));v18=v18 + (5 -3);v39=(4573 -2675) -(599 + 1298);end if (v39==(1555 -(1010 + 544))) then return (v41 * (1516 -(947 + 313))) + v40;end end end local function v27()local v42,v43,v44,v45=v1(v16,v18,v18 + (5 -2));v18=v18 + (4 -0);return (v45 * (4252282 + 4104417 + 8420517)) + (v44 * (13521 + 52015)) + (v43 * (804 -548)) + v42;end local function v28()local v46=0;local v47;local v48;local v49;local v50;local v51;local v52;while true do if (v46==(798 -(20 + (1340 -(51 + 511))))) then v47=v27();v48=v27();v46=696 -(244 + 451);end if (v46==2) then v51=v21(v48,5 + 16,1388 -(401 + 956));v52=((v21(v48,5 + 27)==1) and  -(1 + 0)) or (139 -((749 -(626 + 90)) + 105));v46=833 -(607 + 223);end if (v46==(2 + 1)) then if (v51==0) then if (v50==(0 + (0 -0))) then return v52 * (1159 -(624 + 535));else v51=1;v49=0;end elseif (v51==(7811 -5764)) then return ((v50==(0 + 0)) and (v52 * (((77 -(33 + 43)) + 0 + 0)/(788 -(374 + 414))))) or (v52 * NaN);end return v8(v52,v51-((3242 -(5 + 1510)) -704)) * (v49 + (v50/((2 + 0)^(1438 -(814 + 572)))));end if (v46==((3 -2) + 0)) then v49=4 -3;v50=(v21(v48,1 -0,1379 -(708 + 651)) * ((5 -3)^(1283 -(678 + 573)))) + v47;v46=1 + 1;end end end local function v29(v30)local v53;if  not v30 then v30=v27();if (v30==(0 -0)) then return "";end end v53=v3(v16,v18,(v18 + v30) -(4 -3));v18=v18 + v30;local v54={};for v66=1 + 0, #v53 do v54[v66]=v2(v1(v3(v53,v66,v66)));end return v6(v54);end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=0 + 0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v55==(3 -1)) then v60=nil;v61=nil;v55=3;end if (1==v55) then v58=nil;v59=nil;v55=2;end if ((947 -(713 + 231))==v55) then v62=nil;while true do if (v56~=1) then else local v91=0;while true do if (v91==1) then v62={};v56=2;break;end if (v91==(0 -0)) then v60={v57,v58,nil,v59};v61=v27();v91=1;end end end if (v56==(0 -0)) then v57={};v58={};v59={};v56=1;end if ((5 -2)==v56) then for v96=1,v27() do v58[v96-(2 -1)]=v33();end for v98=1,v27() do v59[v98]=v27();end return v60;end if (v56~=(1346 -(767 + 577))) then else for v100=434 -(204 + 229),v61 do local v101=0 + 0;local v102;local v103;local v104;local v105;local v106;while true do if (v101~=2) then else v106=nil;while true do if (v102==1) then local v119=0;while true do if (v119==1) then v102=2 + 0;break;end if ((0 -0)==v119) then v105=nil;v106=nil;v119=1 + 0;end end end if (v102~=(1514 -(424 + 1090))) then else v103=0;v104=nil;v102=1 + 0;end if (v102~=2) then else while true do if (v103==0) then local v122=0 + 0;local v123;while true do if (0==v122) then v123=638 -(87 + 551);while true do if (v123~=(1 + 0)) then else v103=409 -(355 + 53);break;end if (v123~=(1864 -(953 + 911))) then else local v209=0 + 0;while true do if (v209==1) then v123=11 -(8 + 2);break;end if ((0 -0)~=v209) then else v104=0;v105=nil;v209=1 + 0;end end end end break;end end end if ((2 -1)==v103) then v106=nil;while true do if (1==v104) then if (v105==(1 + 0)) then v106=v25()~=(0 -0);elseif (v105==2) then v106=v28();elseif (v105~=3) then else v106=v29();end v62[v100]=v106;break;end if (v104~=0) then else local v131=0 -0;local v132;local v133;while true do if (0~=v131) then else v132=0 -0;v133=nil;v131=1;end if (v131==(1 + 0)) then while true do if (v132==0) then v133=0 + 0;while true do if (v133~=0) then else local v249=0;while true do if (v249==(0 -0)) then local v265=1544 -(1047 + 497);while true do if (1==v265) then v249=1;break;end if (v265==(0 -0)) then v105=v25();v106=nil;v265=1;end end end if (v249==(1 + 0)) then v133=1 + 0;break;end end end if (v133==1) then v104=1 + 0;break;end end break;end end break;end end end end break;end end break;end end break;end if (v101==1) then v104=nil;v105=nil;v101=1361 -(1070 + 289);end if (v101==0) then v102=0 -0;v103=nil;v101=1;end end end v60[3]=v25();for v107=1 + 0,v27() do local v108=0;local v109;local v110;local v111;while true do if (v108==(1977 -(1638 + 338))) then v111=nil;while true do if (0==v109) then local v120=162 -(79 + 83);local v121;while true do if (v120==0) then v121=0 -0;while true do if (v121~=1) then else v109=1;break;end if (v121==0) then v110=0;v111=nil;v121=1;end end break;end end end if (v109~=1) then else while true do if (v110~=(0 -0)) then else v111=v25();if (v21(v111,1,1 + 0)==(0 -0)) then local v124=1740 -(173 + 1567);local v125;local v126;local v127;local v128;local v129;while true do if (v124~=2) then else v129=nil;while true do if (v125~=0) then else local v223=0;while true do if (v223~=1) then else v125=1;break;end if (v223==(0 + 0)) then v126=0;v127=nil;v223=1;end end end if (v125==(2 -1)) then v128=nil;v129=nil;v125=1 + 1;end if (v125~=(2 + 0)) then else while true do if ((1 + 1)==v126) then local v245=0;while true do if (v245==0) then if (v21(v128,113 -(62 + 50),1)==(1 + 0)) then v129[2 + 0]=v62[v129[1 + 1]];end if (v21(v128,2 + 0,1749 -(1048 + 699))==(1 + 0)) then v129[3]=v62[v129[5 -2]];end v245=335 -(319 + 15);end if (v245==1) then v126=3;break;end end end if (v126~=(2 -1)) then else local v246=0;while true do if (v246==1) then v126=2;break;end if (v246==(0 + 0)) then v129={v26(),v26(),nil,nil};if (v127==(1203 -(8 + 1195))) then local v273=0 + 0;local v274;while true do if (v273==(0 -0)) then v274=0;while true do if (v274~=(24 -(16 + 8))) then else v129[7 -4]=v26();v129[4]=v26();break;end end break;end end elseif (v127==(1950 -(249 + 1700))) then v129[3]=v27();elseif (v127==2) then v129[11 -8]=v27() -(2^(10 + 6));elseif (v127==(6 -3)) then local v292=0 + 0;local v293;while true do if (v292==0) then v293=0;while true do if (v293==0) then v129[3]=v27() -((674 -(92 + 580))^16);v129[2 + 2]=v26();break;end end break;end end end v246=3 -2;end end end if (v126==3) then if (v21(v128,1 + 2,797 -(685 + 109))==(1 + 0)) then v129[4]=v62[v129[1959 -(1719 + 236)]];end v57[v107]=v129;break;end if (v126==0) then v127=v21(v111,1710 -(124 + 1584),3);v128=v21(v111,4,6);v126=1;end end break;end end break;end if (v124~=1) then else v127=nil;v128=nil;v124=1 + 1;end if (v124~=0) then else v125=0;v126=nil;v124=2 -1;end end end break;end end break;end end break;end if (v108~=(0 + 0)) then else v109=0;v110=nil;v108=1;end end end v56=1 + 2;end end break;end if (v55==(0 -0)) then v56=0;v57=nil;v55=1;end end end local function v34(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==0) then v69=1;v70= -1;v68=1;end if (v68==3) then A,B=v32(v11(v73));if  not A[1] then local v93=v35[4][v69] or "?";error("Script error at ["   .. v93   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v68==2) then v73=nil;v73=function()local v81=v63;local v82=v64;local v83=v65;local v84=v32;local v85={};local v86={};local v87={};for v94=1103 -(145 + 104 + 854),v72 do if ((v94>=v83) or ((9318 -5295)<=(515 + 88))) then v85[v94-v83]=v71[v94 + ((1799 -921) -(54 + 823))];else v87[v94]=v71[v94 + (2 -1)];end end local v88=(v72-v83) + (237 -(221 + 15));local v89;local v90;while true do local v95=0 + 0;while true do if ((v95==(116 -(18 + 97))) or ((5126 -1204)<=(5371 -3807))) then if (((5767 -(357 + 969))>(699 + 75)) and (v90<=(42 -26))) then if (((6777 -(3393 -(103 + 456)))>(7344 -4160)) and (v90<=(10 -3))) then if ((v90<=3) or ((890 + 3118)==(368 + 408))) then if ((2288>=(177 + 62)) and (v90<=1)) then if ((v90==(348 -(338 + 10))) or ((840 -((1800 -(125 + 1395)) + 278))==((3948 -(892 + 411)) + 555))) then for v199=v89[2 + 0],v89[7 -4] do v87[v199]=nil;end else local v134=0 -0;local v135;local v136;while true do if (((1800 -696)<=(7004 -2801)) and (v134==(1053 -(534 + 519)))) then v135=675 -(201 + 474);v136=nil;v134=3 -2;end if (((2650 -1901)<=(3045 -(688 + 1001))) and ((1662 -(728 + 933))==v134)) then while true do if (((2241 -((325 -188) + 35))<=((17509 -(321 + 1489)) -11067)) and (v135==(0 -0))) then v136=v89[64 -(38 + 24)];v87[v136](v13(v87,v136 + (707 -(692 + 14)) + 0,v70));break;end end break;end end end elseif (((59 + 86)==145) and (v90==(951 -(927 + (219 -(44 + 153)))))) then v87[v89[1443 -(783 + 658)]]();else local v137=1177 -(364 + 813);local v138;local v139;local v140;local v141;local v142;while true do if (((1122 -660)<=(6474 -(1711 + 258))) and (v137==(0 -0))) then v138=585 -(253 + 332);v139=nil;v137=(3 -1) -1;end if (((2407 + 1694)>=(4125 -(415 + 253))) and (v137==(162 -(128 + 32)))) then v142=nil;while true do if (((823 -259)>=(19 + 36 + 412)) and (v138==(86 -(29 + 57)))) then v139=v89[3 -1];v140,v141=v84(v87[v139](v87[v139 + (1848 -(1008 + 839))]));v138=1 + 0;end if ((((253 + 186) -82)==(1551 -1194)) and ((937 -(152 + 783))==v138)) then for v235=v139,v70 do local v236=0 -0;local v237;while true do if (((3252 -(16 + 27))<=(8826 -5142)) and (v236==(0 -0))) then v237=569 -(322 + 247);while true do if (((548 + 260)<=(9591 -4624)) and (v237==((0 -0) -0))) then v142=v142 + (1416 -(261 + 1154));v87[v235]=v140[v142];break;end end break;end end end break;end if ((v138==(1116 -(733 + 382))) or ((1735 -(1241 -(125 + 2)))>=((13264 -5744) -2669))) then v70=(v141 + v139) -(1 + 0);v142=0 -0;v138=2 + 0;end end break;end if ((v137==(1 + 0)) or ((2107 -(754 + 682))>(2052 -(1003 + 339)))) then v140=nil;v141=nil;v137=1130 -(1062 + 66);end end end elseif ((v90<=(21 -(10 + 6))) or ((3835 -(35 + 371))<=(582 + 1616))) then if (((3663 -2765)==((2465 -1317) -(248 + 2))) and (v90>(705 -(499 + 202)))) then v69=v89[3 + 0];else v87[v89[3 -1]]=v87[v89[(2330 -(142 + 319)) -(141 + 1725)]][v89[5 -1]];end elseif (((250 -((1334 -(1262 + 6)) + 135))<=(60 + 1683 + 1418)) and (v90>(9 -3))) then local v146=1878 -(128 + 1750);local v147;while true do if ((v146==(0 -0)) or ((4137 -(884 + 252))<((4389 -(64 + 43)) -(1163 + 277)))) then v147=v89[2 + 0];v87[v147]=v87[v147]();break;end end else local v148=0 + 0;local v149;while true do if (((3009 -(942 + (1088 -(633 + 223))))<(5000 -(623 + 101))) and (v148==(0 -0))) then v149=v89[6 -4];v87[v149]=v87[v149](v87[v149 + (685 -(586 + 98))]);break;end end end elseif (((1118 + 504 + 1897)>=(1993 -(97 + 1294))) and (v90<=11)) then if ((v90<=9) or ((1504 -(24 + 861))==(1453 + 1703))) then if (((66 + 322 + 2118)>(6991 -4620)) and (v90==(1452 -(384 + 1060)))) then v87[v89[1976 -(823 + 20 + 1131)]]=v87[v89[1714 -(1031 + 680)]] * v89[3 + 1];else v87[v89[1922 -(1782 + 138)]]=v89[3 + 0];end elseif ((v90==(2 + 8)) or ((2301 + 1852)<=(286 + 896))) then local v153=826 -(83 + 743);local v154;local v155;while true do if (((106 + 616)<=((804 -(299 + 50)) + 362)) and ((1257 -(1058 + 199))==v153)) then v154=v89[814 -((1713 -(430 + 729)) + 258)];v155=v87[v89[711 -(268 + 440)]];v153=1 -0;end if (((1697 -(426 + 58))==(5965 -4752)) and (v153==(1 + 0))) then v87[v154 + (4 -3)]=v155;v87[v154]=v155[v89[222 -(28 + 190)]];break;end end else local v156=0 -(690 -(603 + 87));local v157;local v158;local v159;while true do if (((1 -0)==v156) or ((1860 + (3514 -(897 + 824)))<((1373 + 78) -(163 + 997)))) then v159=nil;while true do if (((0 -(0 -0))==v157) or ((4750 -(435 + 956 + 82))<(3760 -1742))) then local v226=1165 -(531 + 634);while true do if ((v226==(1 + 0)) or (((436 + 1187) -659)<((2210 -(1055 + 1)) -641))) then v157=1014 -(618 + 395);break;end if ((v226==(0 + 0)) or ((5188 -(240 + 29))<(4393 -(1473 + 437)))) then v158=315 -(121 + 194);v159=nil;v226=1 -0;end end end if (((4932 -((1840 -(177 + 1366)) + 321))>=(4872 -(854 + 162))) and (v157==(1 + 0))) then while true do if (((417 + 1162)<(3916 -(85 + 1757))) and (v158==(0 + (1421 -(395 + 1026))))) then v159=v89[4 -2];v87[v159]=v87[v159](v13(v87,v159 + (1829 -(1211 + 617)),v70));break;end end break;end end break;end if (((3161 -(378 + 396))<(634 + 3581)) and (v156==(0 -0))) then v157=(1671 -(162 + 314)) -(444 + 751);v158=nil;v156=1 + 0;end end end elseif (((14579 -11028)==(3188 + 363)) and (v90<=(596 -(484 + 99)))) then if (((636 + 1089)>=(1799 -(980 + 80))) and (v90==(1 + 7 + 4))) then if (((3368 + 1479)>(2657 -1079)) and  not v87[v89[7 -5]]) then v69=v69 + 1 + 0;else v69=v89[1976 -(547 + 1426)];end else local v160=(2044 -(1243 + 224)) -(407 + 170);local v161;local v162;local v163;local v164;local v165;local v166;local v167;while true do if ((v160==(76 -(47 + 26))) or ((6487 -4609)==((126 + 3423) -2523))) then v167=nil;while true do if (((4665 -(1020 + (1516 -(868 + 148))))>(8466 -(7621 -(1144 + 30)))) and (v161==(1689 -(835 + 213 + 638)))) then while true do if (((10569 -7374)>(8901 -5930)) and ((2 -0)==v162)) then local v252=1280 -(414 + 866);local v253;while true do if (((538 + 455)==(779 + 214)) and (v252==(0 + 0))) then v253=1949 -(816 + 1133);while true do if ((v253==(0 + 0)) or ((1231 + 2273)<(860 + 1944))) then local v282=0 + 0 + 0;while true do if ((v282==(933 -(326 + (951 -(6 + 339))))) or ((426 + 3074)==3523)) then v253=1856 -(1544 + 311);break;end if ((((0 -0) + 0)==v282) or ((770 + 1157)==(6340 -(903 + 1009)))) then for v294=1 -0,v164 do v87[v165 + v294]=v166[v294];end v167=v166[(2067 -1262) -(87 + 717)];v282=1 -(437 -(401 + 36));end end end if (((1 + 0)==v253) or ((3634 -(1534 -432))==(1009 + 51))) then v162=3;break;end end break;end end end if ((v162==(1 + 0)) or ((5566 -(495 + 694))==(5783 -2752))) then local v254=0 + 0;while true do if (((1793 + 2450)==(9956 -5713)) and (v254==(1 + 0))) then v162=(1404 -(882 + 521)) + 1;break;end if ((2383>(2303 -1367)) and (v254==(0 + (1295 -(390 + 905))))) then local v266=1597 -(660 + 937);while true do if ((v266==(1 -0)) or ((6334 -(1441 + 1))<=(2074 -1196))) then v254=1 + 0;break;end if (((0 + 0)==v266) or ((2001 + 818)==(11163 -7176))) then v165=v163 + (2 -(591 -(268 + 323)));v166={v87[v163](v87[v163 + 1 + 0],v87[v165])};v266=1 -0;end end end end end if ((v162==(0 -0)) or ((11308 -(26410 -19302))<(475 + 189))) then local v255=559 -(367 + 192);local v256;while true do if (((286 + 745)<(21166 -16677)) and (v255==(1869 -(690 + (3100 -1921))))) then v256=0 + 0;while true do if (((3705 -2151)<(1390 + 2798)) and (v256==(0 -0))) then v163=v89[2 -0];v164=v89[(784 -(29 + 212)) -(510 + 13 + 16)];v256=1585 -(153 + 1431);end if ((v256==(1 + 0)) or ((4632 -(1295 + 1835))==(1222 + 2875))) then v162=1 + 0;break;end end break;end end end if (((3656 -(272 + 129 + 394))<=((633 + 4967) -(1398 + 479))) and ((2 + 1)==v162)) then if (v167 or ((4354 -3072)>=((2396 + 146) -(101 + 1024)))) then local v261=(0 -0) -(0 -0);while true do if (((3547 -(177 + 97))>=(1033 -(590 + (682 -441)))) and (v261==(0 -0))) then v87[v165]=v167;v69=v89[6 -3];break;end end else v69=v69 + (2 -1);end break;end end break;end if ((v161==(2 -0)) or (2652>=(5100 -((577 -230) + 716)))) then v166=nil;v167=nil;v161=1 + 2;end if (((141 + 3006)>(247 + 366)) and (v161==(211 -((459 -(103 + 153)) + 8)))) then v162=1528 -(1397 + 131);v163=nil;v161=164 -(119 + 44);end if ((v161==((9 -7) -1)) or (((5033 -(96 + 49)) -(3409 -(549 + 162)))<=(2770 -1520))) then local v227=0 + 0;while true do if (((4077 -(1267 + 115))>((4128 -(666 + 176)) -2091)) and ((0 -0)==v227)) then v164=nil;v165=nil;v227=1 + 0;end if (((14557 -10093)==(4594 -(14 + 116))) and (v227==(2 -1))) then v161=7 -5;break;end end end end break;end if ((v160==(0 -0)) or ((1832 -(328 + 91))>(6869 -2847))) then v161=0;v162=nil;v160=1 + 0;end if ((3633>=(1134 + 523)) and (v160==(1062 -(29 + 911 + 121)))) then v163=nil;v164=nil;v160=5 -3;end if (((396 + 973)<=(1727 -(14 + 205))) and ((2 + 0)==v160)) then v165=nil;v166=nil;v160=11 -8;end end end elseif ((v90<=(27 -(36 -23))) or ((2073 + 1318)<=(1219 -771))) then local v168=992 -(69 + 923);local v169;while true do if (((640 -175)<(4172 + 571)) and (v168==(0 + 0))) then v169=v89[967 -(919 + 46)];v87[v169](v87[v169 + (1 -0)]);break;end end elseif (((329 + 375 + 1722)>=((595 + 1891) -(273 + 367))) and (v90>((42 -28) + 1))) then local v202=1723 -(274 + 1449);local v203;local v204;while true do if ((2317==(3712 -(416 + 979))) and (v202==(1 + (0 -0)))) then while true do if ((v203==(0 + 0)) or ((4130 -(271 + 22))<(307 + 874))) then v204=v89[(453 + 653) -(609 + 495)];v87[v204](v13(v87,v204 + (1 -0),v89[1607 -(237 + 1367)]));break;end end break;end if ((v202==(0 -0)) or ((6056 -(18054 -13574))==(12875 -8582))) then v203=0 -0;v204=nil;v202=(3 -1) -1;end end elseif ((((7373 -(185 + 710)) -(867 + 845))==(5682 -(237 + 679))) and (v87[v89[1196 -(429 + 765)]]==v87[v89[7 -3]])) then v69=v69 + (2 -1);else v69=v89[(458 -(392 + 65)) + 2];end elseif ((v90<=((1684 + 79) -(1342 + 397))) or ((1211 + 3749)<=(623 + 1734))) then if (((2084 + 2146)>(28 + 144)) and (v90<=20)) then if (((2110 -1481)<((2810 -(19 + 22)) + 228)) and (v90<=(11 + 7))) then if ((v90==(26 -9)) or ((704 + 294 + (1379 -900))>(2986 -(260 + 217)))) then v87[v89[1 + 1]][v89[9 -6]]=v87[v89[1 + 3]];elseif (((13 + 4 + 18)<=(2796 -1364)) and (v87[v89[(2 + 0) -(0 -0)]]<v87[v89[441 -(342 + 95)]])) then v69=v69 + 1;else v69=v89[1 + 2];end elseif (((6273 -3658)<=(3038 + (3540 -1588))) and (v90==(69 -50))) then if ((v87[v89[3 -(1 + 0)]]==v89[(55 + 432) -(14 + 469)]) or ((820 -(846 -337))>=(1713 + 2383))) then v69=v69 + ((2136 -(828 + 64)) -(1120 + 123));else v69=v89[1376 -(365 + 1008)];end else local v172=0 + 0;local v173;local v174;while true do if (((7553 -5063)>=(164 -69)) and ((242 -(149 + 92))==v172)) then while true do if (((6192 -1904)==(6093 -(574 + 1231))) and (v173==(1485 -(288 + 1197)))) then v174=v89[932 -(223 + 707)];v87[v174]=v87[v174](v13(v87,v174 + (2 -1) + 0,v89[6 -3]));break;end end break;end if ((v172==(944 -(543 + 27 + 374))) or (3973<=(5014 -2131))) then local v220=516 -(18 + 5 + 493);while true do if (((1891 + 738)>=(3257 -(1728 + 159))) and ((3 -2)==v220)) then v172=1454 -(635 + 818);break;end if ((v220==(0 -0)) or (((10614 -(686 + 144)) -5304)<(122 + 126 + 1429))) then v173=(1186 -(1021 + 165)) + 0;v174=nil;v220=3 -2;end end end end end elseif ((v90<=((171 + 754) -((851 -(58 + 62)) + 172))) or ((3270 -(528 + 1435))>=(6466 -(1624 + 248)))) then if (((6334 -2085)>(1777 -(128 + 0 + 1003))) and (v90>21)) then v87[v89[2]]=v87[v89[3 -0]] + v87[v89[6 -2]];elseif (((3190 + 176)>(4645 -((2211 -(213 + 546)) + 311))) and (v89[750 -(253 + 495)]==v87[v89[113 -(23 + 86)]])) then v69=v69 + (928 -(476 + 451));else v69=v89[3 -0];end elseif (((20431 -16239)>(752 + 99)) and (v90==(71 -48))) then local v176=0 + 0 + 0;local v177;local v178;local v179;local v180;local v181;while true do if ((v176==(2 -0)) or ((2241 -(135 + 1359))<=(7 + 2 + 44))) then v181=nil;while true do if (((6057 -(399 + 1306))>(2440 -(582 + 1021))) and ((1806 -(495 + 1311))==v177)) then local v230=0 + 0;local v231;while true do if (((193 + 1006)>(1348 -(314 + 239))) and (v230==(1876 -(1642 + 234)))) then v231=0 + 0 + 0;while true do if ((v231==((0 -0) -0)) or ((8130 -3557)<(10162 -7706))) then local v267=0;while true do if (((5003 -(993 + 335))<=(3465 + 960)) and (v267==(1295 -((1482 -356) + 169)))) then v178=v89[4 -2];v179,v180=v84(v87[v178](v13(v87,v178 + (3 -2),v89[(6 -3) + 0])));v267=3 -2;end if ((v267==(1001 -(573 + 427))) or ((5645 -((78 -43) + 905))<=(4222 -2610))) then v231=1 + 0;break;end end end if ((v231==(1397 -(1148 + 248))) or ((3870 -2773)==(999 + 2386))) then v177=4 -3;break;end end break;end end end if ((v177==1) or ((1738 -1064)>=(2372 + 2131))) then local v232=0 + (0 -0);local v233;while true do if (((293 + 92)<=(655 + 3946)) and (v232==(0 -(699 -(175 + 524))))) then v233=0 -0;while true do if ((((4287 -(1479 + 338)) -1194)>(1813 -(1055 -(192 + 35)))) and (v233==(197 -(81 + 116)))) then v70=(v180 + v178) -(198 -(32 + 165));v181=0 + (0 -0);v233=1 + 0;end if ((v233==(2 -1)) or ((2430 -(17 + 1846))>=(2933 -(68 + 605)))) then v177=3 -1;break;end end break;end end end if ((v177==(1 + 1)) or ((853 + 2195)>(6636 -(256 + (3034 -(1446 + 107)))))) then for v238=v178,v70 do local v239=0 + 0;local v240;while true do if ((v239==(49 -(21 + 28))) or ((3780 -(539 + 168 + 236))<(657 + (3924 -2404)))) then v240=0 + 0;while true do if (((1402 + (2835 -(316 + 877)))>(2369 + 313)) and (v240==((2884 -(1081 + 215)) -(519 + 1069)))) then v181=v181 + (1382 -(714 + 667));v87[v238]=v179[v181];break;end end break;end end end break;end end break;end if (((1997 -(751 + 847))>((984 -(153 + 15)) -(388 + 166))) and ((1209 -(438 + 771))==v176)) then v177=0 + 0;v178=nil;v176=1 + 0;end if (((454 -163)==(1865 -(226 + 1348))) and ((285 -(273 + 11))==v176)) then v179=nil;v180=nil;v176=694 -(682 + 10);end end else v87[v89[6 -4]]=v87[v89[298 -((202 -131) + 224)]] -v87[v89[1557 -(377 + 1176)]];end elseif (((1732 -1224)==(99 + 409)) and (v90<=(91 -(60 + 3)))) then if ((120<(1573 + 949 + 1178)) and (v90<=(1143 -(25 + 281 + 811)))) then if ((v90>(22 + 3)) or (((11574 -(1351 + 207)) -6118)<(1239 + 2254))) then v87[v89[5 -3]]={};else v87[v89[1 + 1]][v89[1443 -(271 + 1169)]]=v89[7 -3];end elseif ((v90>((133 -(89 + 9)) -(4 + 4))) or ((3853 -(113 + 840))>=(6475 -3572))) then v87[v89[293 -(43 + 248)]]=v87[v89[2 + 1]];else local v188=750 -(243 + (1352 -845));local v189;local v190;local v191;while true do if (((5926 -2808)>(507 + 2097)) and (v188==(0 -0))) then v189=1838 -(1699 + 139);v190=nil;v188=2 -1;end if (((162 + 1758)>(385 + 501)) and (v188==(4 -3))) then v191=nil;while true do if (((3283 -(366 + 374))>(2919 -2244)) and (v189==(0 -0))) then v190=0 + 0;v191=nil;v189=1;end if ((v189==(1243 -(629 + 613))) or ((2732 -(1438 + 131))>=((7764 -5267) + 1231))) then while true do if (((1495 + 2203)<=(13445 -8526)) and (v190==(0 -0))) then v191=v87[v89[824 -(234 + 586)]];if (((408 + 1414)<(16908 -12371)) and  not v191) then v69=v69 + (657 -(550 + 106));else local v262=0 -0;local v263;local v264;while true do if (((9038 -7000)<=((20364 -12150) -3921)) and (v262==(824 -((1063 -572) + 333)))) then v263=0 -0;v264=nil;v262=440 -(360 + 67 + 12);end if (((3498 -1937)>(1381 -(263 + 146))) and (v262==(3 -2))) then while true do if ((v263==(279 -(177 + 102))) or ((1735 + (7107 -4641))<(3050 -(1936 + 46)))) then v264=0 + 0;while true do if ((v264==(425 -(370 + 43 + 12))) or ((18903 -14318)==(75 + 311))) then v87[v89[1 + 1]]=v191;v69=v89[1 + 2];break;end end break;end end break;end end end break;end end break;end end break;end end end elseif (((2044 + 1177)==(3050 + 171)) and (v90<=(67 -37))) then if ((((135 + 4384) -(952 + 124))<=(4993 -(389 + 605))) and (v90==(1058 -(119 + 910)))) then v87[v89[1524 -(1040 + 482)]]=v37[v89[8 -5]];else do return;end end elseif ((v90<=(15 + 16)) or ((5384 -(415 + 1174))<(2738 -(520 + 770)))) then local v194=(0 + 0) -0;local v195;local v196;local v197;local v198;while true do if (((1167 -(635 + 185))<=(226 + 141 + 336)) and (v194==(2 + 0))) then while true do if (((0 -0)==v195) or ((1053 -(230 + 417))==(2084 -1371))) then local v234=0 + 0;while true do if (((2600 -(115 + 115))>(2441 -(416 + 4))) and ((0 + 0)==v234)) then local v258=0 + 0;while true do if ((v258==(1 -0)) or ((6009 -(254 + 1689))==(3280 -((2702 -(88 + 1716)) + 725)))) then v234=3 -2;break;end if ((v258==(0 + 0)) or ((5011 -(4 + 377))<=(1089 -(260 + 163)))) then v196=v89[2 -0];v197={v87[v196](v13(v87,v196 + (451 -(164 + 0 + 286)),v70))};v258=4 -(1715 -(1624 + 88));end end end if ((v234==(124 -(27 + 96))) or ((986 + 796)==(2676 + 1727))) then v195=1 + 0;break;end end end if (((9695 -6242)>=(1341 -(76 + 5))) and (v195==(596 -(509 + 86)))) then v198=0 -0;for v241=v196,v89[1379 -(404 + 971)] do local v242=0 + 0;local v243;local v244;while true do if (((515 -(454 + 60))==v242) or ((249 + (461 -215))>(415 + 650))) then while true do if ((v243==0) or ((1024 + 108)<=((4790 -(417 + 253)) -3087))) then v244=0 -0;while true do if (((8046 -3731)>(201 + 779)) and (v244==(0 -0))) then v198=v198 + (851 -((875 -(38 + 638)) + 651));v87[v241]=v197[v198];break;end end break;end end break;end if ((v242==(0 + 0)) or ((3744 -((738 -463) + (2310 -1257)))>(6032 -(499 + 1286)))) then v243=0 -0;v244=nil;v242=1 + (0 -0);end end end break;end end break;end if ((v194==(0 -(471 -(76 + 395)))) or ((2049 + 1543)<(2853 -(799 + 248)))) then v195=0 + 0;v196=nil;v194=(2091 -(306 + 233)) -(548 + 940 + 63);end if ((((1 -0) -0)==v194) or (((4821 -(823 + 891)) + 216)==(6110 -2057))) then v197=nil;v198=nil;v194=2 + 0;end end elseif (((2493 -((623 -319) + 202))==(1119 + 868)) and (v90==(2 + 30))) then v87[v89[748 -(609 + 137)]]=v34(v82[v89[(41 -18) -(10 + 10)]],nil,v37);elseif (((650 -497)==(209 -56)) and v87[v89[2 + 0]]) then v69=v69 + (1328 -(465 + 862));else v69=v89[1 + (3 -1)];end v69=v69 + (3 -2);break;end if ((v95==(0 -0)) or ((169 + 897)>=(108 + 1199 + 2168))) then local v116=0 + 0;while true do if (((6634 -3356)>(165 + 25)) and (v116==(1 + 0))) then v95=1 -0;break;end if ((v116==(0 -0)) or ((5219 -(70 + (1722 -1106)))==(4167 -(1107 + 1)))) then v89=v81[v69];v90=v89[1 + 0];v116=702 -(640 + 61);end end end end end end;v68=3;end if (v68==1) then v71={...};v72=v12("#",...) -1;v68=2;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
